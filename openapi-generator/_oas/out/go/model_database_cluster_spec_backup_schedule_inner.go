/*
Percona Everest schema

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DatabaseClusterSpecBackupScheduleInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseClusterSpecBackupScheduleInner{}

// DatabaseClusterSpecBackupScheduleInner BackupSchedule represents set of settings to configure backup schedule.
type DatabaseClusterSpecBackupScheduleInner struct {
	CompressionLevel *int32 `json:"compressionLevel,omitempty"`
	CompressionType *string `json:"compressionType,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Keep *int32 `json:"keep,omitempty"`
	Name *string `json:"name,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
	StorageName *string `json:"storageName,omitempty"`
}

// NewDatabaseClusterSpecBackupScheduleInner instantiates a new DatabaseClusterSpecBackupScheduleInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseClusterSpecBackupScheduleInner() *DatabaseClusterSpecBackupScheduleInner {
	this := DatabaseClusterSpecBackupScheduleInner{}
	return &this
}

// NewDatabaseClusterSpecBackupScheduleInnerWithDefaults instantiates a new DatabaseClusterSpecBackupScheduleInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseClusterSpecBackupScheduleInnerWithDefaults() *DatabaseClusterSpecBackupScheduleInner {
	this := DatabaseClusterSpecBackupScheduleInner{}
	return &this
}

// GetCompressionLevel returns the CompressionLevel field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupScheduleInner) GetCompressionLevel() int32 {
	if o == nil || IsNil(o.CompressionLevel) {
		var ret int32
		return ret
	}
	return *o.CompressionLevel
}

// GetCompressionLevelOk returns a tuple with the CompressionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) GetCompressionLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.CompressionLevel) {
		return nil, false
	}
	return o.CompressionLevel, true
}

// HasCompressionLevel returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) HasCompressionLevel() bool {
	if o != nil && !IsNil(o.CompressionLevel) {
		return true
	}

	return false
}

// SetCompressionLevel gets a reference to the given int32 and assigns it to the CompressionLevel field.
func (o *DatabaseClusterSpecBackupScheduleInner) SetCompressionLevel(v int32) {
	o.CompressionLevel = &v
}

// GetCompressionType returns the CompressionType field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupScheduleInner) GetCompressionType() string {
	if o == nil || IsNil(o.CompressionType) {
		var ret string
		return ret
	}
	return *o.CompressionType
}

// GetCompressionTypeOk returns a tuple with the CompressionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) GetCompressionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CompressionType) {
		return nil, false
	}
	return o.CompressionType, true
}

// HasCompressionType returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) HasCompressionType() bool {
	if o != nil && !IsNil(o.CompressionType) {
		return true
	}

	return false
}

// SetCompressionType gets a reference to the given string and assigns it to the CompressionType field.
func (o *DatabaseClusterSpecBackupScheduleInner) SetCompressionType(v string) {
	o.CompressionType = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupScheduleInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *DatabaseClusterSpecBackupScheduleInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetKeep returns the Keep field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupScheduleInner) GetKeep() int32 {
	if o == nil || IsNil(o.Keep) {
		var ret int32
		return ret
	}
	return *o.Keep
}

// GetKeepOk returns a tuple with the Keep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) GetKeepOk() (*int32, bool) {
	if o == nil || IsNil(o.Keep) {
		return nil, false
	}
	return o.Keep, true
}

// HasKeep returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) HasKeep() bool {
	if o != nil && !IsNil(o.Keep) {
		return true
	}

	return false
}

// SetKeep gets a reference to the given int32 and assigns it to the Keep field.
func (o *DatabaseClusterSpecBackupScheduleInner) SetKeep(v int32) {
	o.Keep = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupScheduleInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DatabaseClusterSpecBackupScheduleInner) SetName(v string) {
	o.Name = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupScheduleInner) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *DatabaseClusterSpecBackupScheduleInner) SetSchedule(v string) {
	o.Schedule = &v
}

// GetStorageName returns the StorageName field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupScheduleInner) GetStorageName() string {
	if o == nil || IsNil(o.StorageName) {
		var ret string
		return ret
	}
	return *o.StorageName
}

// GetStorageNameOk returns a tuple with the StorageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) GetStorageNameOk() (*string, bool) {
	if o == nil || IsNil(o.StorageName) {
		return nil, false
	}
	return o.StorageName, true
}

// HasStorageName returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupScheduleInner) HasStorageName() bool {
	if o != nil && !IsNil(o.StorageName) {
		return true
	}

	return false
}

// SetStorageName gets a reference to the given string and assigns it to the StorageName field.
func (o *DatabaseClusterSpecBackupScheduleInner) SetStorageName(v string) {
	o.StorageName = &v
}

func (o DatabaseClusterSpecBackupScheduleInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseClusterSpecBackupScheduleInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompressionLevel) {
		toSerialize["compressionLevel"] = o.CompressionLevel
	}
	if !IsNil(o.CompressionType) {
		toSerialize["compressionType"] = o.CompressionType
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Keep) {
		toSerialize["keep"] = o.Keep
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.StorageName) {
		toSerialize["storageName"] = o.StorageName
	}
	return toSerialize, nil
}

type NullableDatabaseClusterSpecBackupScheduleInner struct {
	value *DatabaseClusterSpecBackupScheduleInner
	isSet bool
}

func (v NullableDatabaseClusterSpecBackupScheduleInner) Get() *DatabaseClusterSpecBackupScheduleInner {
	return v.value
}

func (v *NullableDatabaseClusterSpecBackupScheduleInner) Set(val *DatabaseClusterSpecBackupScheduleInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseClusterSpecBackupScheduleInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseClusterSpecBackupScheduleInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseClusterSpecBackupScheduleInner(val *DatabaseClusterSpecBackupScheduleInner) *NullableDatabaseClusterSpecBackupScheduleInner {
	return &NullableDatabaseClusterSpecBackupScheduleInner{value: val, isSet: true}
}

func (v NullableDatabaseClusterSpecBackupScheduleInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseClusterSpecBackupScheduleInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


