openapi: 3.0.2
info:
  title: Percona Everest schema
  version: 1.0.0
servers:
- url: /v1
tags:
- description: Everything related to Kubernetes clusters
  name: k8s
- description: Everything related to database clusters
  name: db
paths:
  /kubernetes:
    get:
      description: List of registered kubernetes clusters
      operationId: listKubernetesClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Unsuccessful operation
      summary: List of registered kubernetes clusters
      tags:
      - k8s
    post:
      description: Register Kubernetes cluster in the control plane
      operationId: registerKubernetes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesCluster'
        description: Register a new kubernetes cluster in the control plane
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Unsuccessful operation
      summary: Register Kubernetes cluster in the control plane
      tags:
      - k8s
  /kubernetes/{kubernetesName}/database-cluster:
    get:
      description: List of created database clusters on provided kubernetes cluster
      operationId: listDatabases
      parameters:
      - description: Name of kubernetes Cluster
        explode: false
        in: path
        name: kubernetesName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseClusterList'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Unsuccessful operation
      summary: List of created database clusters on provided kubernetes cluster
      tags:
      - k8s
    post:
      description: Create a database cluster on given kubernetes cluster
      operationId: createDatabaseCluster
      parameters:
      - description: Name of kubernetes Cluster
        explode: false
        in: path
        name: kubernetesName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/database_cluster'
        description: Register a new kubernetes cluster in the control plane
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/database_cluster'
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Unsuccessful operation
      summary: Create a database cluster on given kubernetes cluster
      tags:
      - k8s
components:
  schemas:
    BadRequest:
      description: Bad request response
      properties:
        message:
          type: string
      type: object
    KubernetesCluster:
      description: kubernetes object
      example:
        name: minikube
      properties:
        name:
          example: minikube
          type: string
      type: object
    KubernetesClusterList:
      items:
        $ref: '#/components/schemas/KubernetesCluster'
      type: array
    DatabaseClusterList:
      items:
        $ref: '#/components/schemas/database_cluster'
      type: array
    database_cluster:
      description: DatabaseCluster is the Schema for the databases API.
      example:
        metadata: "{}"
        apiVersion: apiVersion
        kind: kind
        spec:
          databaseType: databaseType
          dbInstance:
            diskSize: null
            memory: null
            storageClassName: storageClassName
            cpu: null
          backup:
            storages:
              key:
                volumeSpec:
                  emptyDir:
                    sizeLimit: null
                    medium: medium
                  persistentVolumeClaim:
                    storageClassName: storageClassName
                    dataSourceRef:
                      apiGroup: apiGroup
                      kind: kind
                      name: name
                      namespace: namespace
                    volumeName: volumeName
                    resources:
                      claims:
                      - name: name
                      - name: name
                      requests:
                        key: null
                      limits:
                        key: null
                    selector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    accessModes:
                    - accessModes
                    - accessModes
                    dataSource:
                      apiGroup: apiGroup
                      kind: kind
                      name: name
                    volumeMode: volumeMode
                  hostPath:
                    path: path
                    type: type
                storageProvider:
                  bucket: bucket
                  storageClass: storageClass
                  containerName: containerName
                  credentialsSecret: credentialsSecret
                  endpointUrl: endpointUrl
                  prefix: prefix
                  region: region
                podSecurityContext:
                  runAsUser: 3
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 7
                  seccompProfile:
                    localhostProfile: localhostProfile
                    type: type
                  windowsOptions:
                    gmsaCredentialSpec: gmsaCredentialSpec
                    runAsUserName: runAsUserName
                    hostProcess: true
                    gmsaCredentialSpecName: gmsaCredentialSpecName
                  fsGroupChangePolicy: fsGroupChangePolicy
                  supplementalGroups:
                  - 2
                  - 2
                  runAsGroup: 9
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                priorityClassName: priorityClassName
                verifyTLS: true
                annotations:
                  key: annotations
                resources:
                  claims:
                  - name: name
                  - name: name
                  requests:
                    key: null
                  limits:
                    key: null
                type: type
                labels:
                  key: labels
                nodeSelector:
                  key: nodeSelector
                runtimeClassName: runtimeClassName
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                containerSecurityContext:
                  privileged: true
                  runAsUser: 6
                  capabilities:
                    add:
                    - add
                    - add
                    drop:
                    - drop
                    - drop
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  seccompProfile:
                    localhostProfile: localhostProfile
                    type: type
                  windowsOptions:
                    gmsaCredentialSpec: gmsaCredentialSpec
                    runAsUserName: runAsUserName
                    hostProcess: true
                    gmsaCredentialSpecName: gmsaCredentialSpecName
                  procMount: procMount
                  allowPrivilegeEscalation: true
                  runAsGroup: 0
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                schedulerName: schedulerName
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 5
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 5
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 2
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 2
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 2
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 2
            image: image
            imagePullPolicy: imagePullPolicy
            initImage: initImage
            schedule:
            - schedule: schedule
              keep: 5
              name: name
              compressionType: compressionType
              compressionLevel: 1
              enabled: true
              storageName: storageName
            - schedule: schedule
              keep: 5
              name: name
              compressionType: compressionType
              compressionLevel: 1
              enabled: true
              storageName: storageName
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            annotations:
              key: annotations
            resources:
              claims:
              - name: name
              - name: name
              requests:
                key: null
              limits:
                key: null
            containerSecurityContext:
              privileged: true
              runAsUser: 6
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              seccompProfile:
                localhostProfile: localhostProfile
                type: type
              windowsOptions:
                gmsaCredentialSpec: gmsaCredentialSpec
                runAsUserName: runAsUserName
                hostProcess: true
                gmsaCredentialSpecName: gmsaCredentialSpecName
              procMount: procMount
              allowPrivilegeEscalation: true
              runAsGroup: 0
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            enabled: true
            labels:
              key: labels
          databaseImage: databaseImage
          databaseConfig: databaseConfig
          loadBalancer:
            image: image
            size: 1
            configuration: configuration
            exposeType: exposeType
            annotations:
              key: annotations
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            resources:
              claims:
              - name: name
              - name: name
              requests:
                key: null
              limits:
                key: null
            type: type
            trafficPolicy: trafficPolicy
          monitoring:
            imagePullPolicy: imagePullPolicy
            pmm:
              image: image
              password: password
              serverUser: serverUser
              publicAddress: publicAddress
              login: login
              serverHost: serverHost
            runtimeClassName: runtimeClassName
            resources:
              claims:
              - name: name
              - name: name
              requests:
                key: null
              limits:
                key: null
            containerSecurityContext:
              privileged: true
              runAsUser: 6
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              seccompProfile:
                localhostProfile: localhostProfile
                type: type
              windowsOptions:
                gmsaCredentialSpec: gmsaCredentialSpec
                runAsUserName: runAsUserName
                hostProcess: true
                gmsaCredentialSpecName: gmsaCredentialSpecName
              procMount: procMount
              allowPrivilegeEscalation: true
              runAsGroup: 0
              runAsNonRoot: true
              readOnlyRootFilesystem: true
          secretsName: secretsName
          pause: true
          clusterSize: 7
        status:
          size: 1
          ready: 1
          host: host
          message: message
          status: status
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          type: object
        spec:
          $ref: '#/components/schemas/database_cluster_spec'
        status:
          $ref: '#/components/schemas/database_cluster_status'
      type: object
    database_cluster_spec_backup_containerSecurityContext_capabilities:
      description: The capabilities to add/drop when running containers. Defaults
        to the default set of capabilities granted by the container runtime. Note
        that this field cannot be set when spec.os.name is windows.
      example:
        add:
        - add
        - add
        drop:
        - drop
        - drop
      properties:
        add:
          description: Added capabilities
          items:
            description: Capability represent POSIX capabilities type
            type: string
          type: array
        drop:
          description: Removed capabilities
          items:
            description: Capability represent POSIX capabilities type
            type: string
          type: array
      type: object
    database_cluster_spec_backup_containerSecurityContext_seLinuxOptions:
      description: "The SELinux context to be applied to the container. If unspecified,\
        \ the container runtime will allocate a random SELinux context for each container.\
        \  May also be set in PodSecurityContext.  If set in both SecurityContext\
        \ and PodSecurityContext, the value specified in SecurityContext takes precedence.\
        \ Note that this field cannot be set when spec.os.name is windows."
      example:
        role: role
        level: level
        type: type
        user: user
      properties:
        level:
          description: Level is SELinux level label that applies to the container.
          type: string
        role:
          description: Role is a SELinux role label that applies to the container.
          type: string
        type:
          description: Type is a SELinux type label that applies to the container.
          type: string
        user:
          description: User is a SELinux user label that applies to the container.
          type: string
      type: object
    database_cluster_spec_backup_containerSecurityContext_seccompProfile:
      description: "The seccomp options to use by this container. If seccomp options\
        \ are provided at both the pod & container level, the container options override\
        \ the pod options. Note that this field cannot be set when spec.os.name is\
        \ windows."
      example:
        localhostProfile: localhostProfile
        type: type
      properties:
        localhostProfile:
          description: "localhostProfile indicates a profile defined in a file on\
            \ the node should be used. The profile must be preconfigured on the node\
            \ to work. Must be a descending path, relative to the kubelet's configured\
            \ seccomp profile location. Must only be set if type is \"Localhost\"."
          type: string
        type:
          description: "type indicates which kind of seccomp profile will be applied.\
            \ Valid options are: \n Localhost - a profile defined in a file on the\
            \ node should be used. RuntimeDefault - the container runtime default\
            \ profile should be used. Unconfined - no profile should be applied."
          type: string
      required:
      - type
      type: object
    database_cluster_spec_backup_containerSecurityContext_windowsOptions:
      description: "The Windows specific settings applied to all containers. If unspecified,\
        \ the options from the PodSecurityContext will be used. If set in both SecurityContext\
        \ and PodSecurityContext, the value specified in SecurityContext takes precedence.\
        \ Note that this field cannot be set when spec.os.name is linux."
      example:
        gmsaCredentialSpec: gmsaCredentialSpec
        runAsUserName: runAsUserName
        hostProcess: true
        gmsaCredentialSpecName: gmsaCredentialSpecName
      properties:
        gmsaCredentialSpec:
          description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
            inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName
            field.
          type: string
        gmsaCredentialSpecName:
          description: GMSACredentialSpecName is the name of the GMSA credential spec
            to use.
          type: string
        hostProcess:
          description: "HostProcess determines if a container should be run as a 'Host\
            \ Process' container. This field is alpha-level and will only be honored\
            \ by components that enable the WindowsHostProcessContainers feature flag.\
            \ Setting this field without the feature flag will result in errors when\
            \ validating the Pod. All of a Pod's containers must have the same effective\
            \ HostProcess value (it is not allowed to have a mix of HostProcess containers\
            \ and non-HostProcess containers).  In addition, if HostProcess is true\
            \ then HostNetwork must also be set to true."
          type: boolean
        runAsUserName:
          description: "The UserName in Windows to run the entrypoint of the container\
            \ process. Defaults to the user specified in image metadata if unspecified.\
            \ May also be set in PodSecurityContext. If set in both SecurityContext\
            \ and PodSecurityContext, the value specified in SecurityContext takes\
            \ precedence."
          type: string
      type: object
    database_cluster_spec_backup_containerSecurityContext:
      description: "SecurityContext holds security configuration that will be applied\
        \ to a container. Some fields are present in both SecurityContext and PodSecurityContext.\
        \  When both are set, the values in SecurityContext take precedence."
      example:
        privileged: true
        runAsUser: 6
        capabilities:
          add:
          - add
          - add
          drop:
          - drop
          - drop
        seLinuxOptions:
          role: role
          level: level
          type: type
          user: user
        seccompProfile:
          localhostProfile: localhostProfile
          type: type
        windowsOptions:
          gmsaCredentialSpec: gmsaCredentialSpec
          runAsUserName: runAsUserName
          hostProcess: true
          gmsaCredentialSpecName: gmsaCredentialSpecName
        procMount: procMount
        allowPrivilegeEscalation: true
        runAsGroup: 0
        runAsNonRoot: true
        readOnlyRootFilesystem: true
      properties:
        allowPrivilegeEscalation:
          description: "AllowPrivilegeEscalation controls whether a process can gain\
            \ more privileges than its parent process. This bool directly controls\
            \ if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation\
            \ is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN\
            \ Note that this field cannot be set when spec.os.name is windows."
          type: boolean
        capabilities:
          $ref: '#/components/schemas/database_cluster_spec_backup_containerSecurityContext_capabilities'
        privileged:
          description: Run container in privileged mode. Processes in privileged containers
            are essentially equivalent to root on the host. Defaults to false. Note
            that this field cannot be set when spec.os.name is windows.
          type: boolean
        procMount:
          description: procMount denotes the type of proc mount to use for the containers.
            The default is DefaultProcMount which uses the container runtime defaults
            for readonly paths and masked paths. This requires the ProcMountType feature
            flag to be enabled. Note that this field cannot be set when spec.os.name
            is windows.
          type: string
        readOnlyRootFilesystem:
          description: Whether this container has a read-only root filesystem. Default
            is false. Note that this field cannot be set when spec.os.name is windows.
          type: boolean
        runAsGroup:
          description: "The GID to run the entrypoint of the container process. Uses\
            \ runtime default if unset. May also be set in PodSecurityContext.  If\
            \ set in both SecurityContext and PodSecurityContext, the value specified\
            \ in SecurityContext takes precedence. Note that this field cannot be\
            \ set when spec.os.name is windows."
          format: int64
          type: integer
        runAsNonRoot:
          description: "Indicates that the container must run as a non-root user.\
            \ If true, the Kubelet will validate the image at runtime to ensure that\
            \ it does not run as UID 0 (root) and fail to start the container if it\
            \ does. If unset or false, no such validation will be performed. May also\
            \ be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence."
          type: boolean
        runAsUser:
          description: "The UID to run the entrypoint of the container process. Defaults\
            \ to user specified in image metadata if unspecified. May also be set\
            \ in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence. Note that this\
            \ field cannot be set when spec.os.name is windows."
          format: int64
          type: integer
        seLinuxOptions:
          $ref: '#/components/schemas/database_cluster_spec_backup_containerSecurityContext_seLinuxOptions'
        seccompProfile:
          $ref: '#/components/schemas/database_cluster_spec_backup_containerSecurityContext_seccompProfile'
        windowsOptions:
          $ref: '#/components/schemas/database_cluster_spec_backup_containerSecurityContext_windowsOptions'
      type: object
    database_cluster_spec_backup_imagePullSecrets_inner:
      description: LocalObjectReference contains enough information to let you locate
        the referenced object inside the same namespace.
      example:
        name: name
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\
            \ TODO: Add other useful fields. apiVersion, kind, uid?"
          type: string
      type: object
      x-kubernetes-map-type: atomic
    database_cluster_spec_backup_resources_claims_inner:
      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
      example:
        name: name
      properties:
        name:
          description: Name must match the name of one entry in pod.spec.resourceClaims
            of the Pod where this field is used. It makes that resource available
            inside a container.
          type: string
      required:
      - name
      type: object
    database_cluster_spec_backup_resources_limits_value:
      anyOf:
      - type: integer
      - type: string
      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\
        +|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
      x-kubernetes-int-or-string: true
    database_cluster_spec_backup_resources:
      description: ResourceRequirements describes the compute resource requirements.
      example:
        claims:
        - name: name
        - name: name
        requests:
          key: null
        limits:
          key: null
      properties:
        claims:
          description: "Claims lists the names of resources, defined in spec.resourceClaims,\
            \ that are used by this container. \n This is an alpha field and requires\
            \ enabling the DynamicResourceAllocation feature gate. \n This field is\
            \ immutable. It can only be set for containers."
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_resources_claims_inner'
          type: array
          x-kubernetes-list-map-keys:
          - name
          x-kubernetes-list-type: map
        limits:
          additionalProperties:
            $ref: '#/components/schemas/database_cluster_spec_backup_resources_limits_value'
          description: "Limits describes the maximum amount of compute resources allowed.\
            \ More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
        requests:
          additionalProperties:
            $ref: '#/components/schemas/database_cluster_spec_backup_resources_limits_value'
          description: "Requests describes the minimum amount of compute resources\
            \ required. If Requests is omitted for a container, it defaults to Limits\
            \ if that is explicitly specified, otherwise to an implementation-defined\
            \ value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
      type: object
    database_cluster_spec_backup_schedule_inner:
      description: BackupSchedule represents set of settings to configure backup schedule.
      example:
        schedule: schedule
        keep: 5
        name: name
        compressionType: compressionType
        compressionLevel: 1
        enabled: true
        storageName: storageName
      properties:
        compressionLevel:
          type: integer
        compressionType:
          type: string
        enabled:
          type: boolean
        keep:
          type: integer
        name:
          type: string
        schedule:
          type: string
        storageName:
          type: string
      type: object
    ? database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_preference_matchExpressions_inner
    : description: "A node selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      example:
        values:
        - values
        - values
        key: key
        operator: operator
      properties:
        key:
          description: The label key that the selector applies to.
          type: string
        operator:
          description: "Represents a key's relationship to a set of values. Valid\
            \ operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
          type: string
        values:
          description: "An array of string values. If the operator is In or NotIn,\
            \ the values array must be non-empty. If the operator is Exists or DoesNotExist,\
            \ the values array must be empty. If the operator is Gt or Lt, the values\
            \ array must have a single element, which will be interpreted as an integer.\
            \ This array is replaced during a strategic merge patch."
          items:
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    ? database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_preference
    : description: "A node selector term, associated with the corresponding weight."
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchFields:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
      properties:
        matchExpressions:
          description: A list of node selector requirements by node's labels.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_preference_matchExpressions_inner'
          type: array
        matchFields:
          description: A list of node selector requirements by node's fields.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_preference_matchExpressions_inner'
          type: array
      type: object
      x-kubernetes-map-type: atomic
    database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner:
      description: An empty preferred scheduling term matches all objects with implicit
        weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no
        objects (i.e. is also a no-op).
      example:
        preference:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        weight: 5
      properties:
        preference:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_preference'
        weight:
          description: "Weight associated with matching the corresponding nodeSelectorTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - preference
      - weight
      type: object
    ? database_cluster_spec_backup_storages_value_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution_nodeSelectorTerms_inner
    : description: A null or empty node selector term matches no objects. The requirements
        of them are ANDed. The TopologySelectorTerm type implements a subset of the
        NodeSelectorTerm.
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchFields:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
      properties:
        matchExpressions:
          description: A list of node selector requirements by node's labels.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_preference_matchExpressions_inner'
          type: array
        matchFields:
          description: A list of node selector requirements by node's fields.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_preference_matchExpressions_inner'
          type: array
      type: object
      x-kubernetes-map-type: atomic
    database_cluster_spec_backup_storages_value_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution:
      description: "If the affinity requirements specified by this field are not met\
        \ at scheduling time, the pod will not be scheduled onto the node. If the\
        \ affinity requirements specified by this field cease to be met at some point\
        \ during pod execution (e.g. due to an update), the system may or may not\
        \ try to eventually evict the pod from its node."
      example:
        nodeSelectorTerms:
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
      properties:
        nodeSelectorTerms:
          description: Required. A list of node selector terms. The terms are ORed.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution_nodeSelectorTerms_inner'
          type: array
      required:
      - nodeSelectorTerms
      type: object
      x-kubernetes-map-type: atomic
    database_cluster_spec_backup_storages_value_affinity_nodeAffinity:
      description: Describes node affinity scheduling rules for the pod.
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 5
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 5
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node matches the corresponding matchExpressions; the\
            \ node(s) with the highest sum are the most preferred."
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner'
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity_requiredDuringSchedulingIgnoredDuringExecution'
      type: object
    ? database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector_matchExpressions_inner
    : description: "A label selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      example:
        values:
        - values
        - values
        key: key
        operator: operator
      properties:
        key:
          description: key is the label key that the selector applies to.
          type: string
        operator:
          description: "operator represents a key's relationship to a set of values.\
            \ Valid operators are In, NotIn, Exists and DoesNotExist."
          type: string
        values:
          description: "values is an array of string values. If the operator is In\
            \ or NotIn, the values array must be non-empty. If the operator is Exists\
            \ or DoesNotExist, the values array must be empty. This array is replaced\
            \ during a strategic merge patch."
          items:
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    ? database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector
    : description: "A label query over a set of resources, in this case pods."
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchLabels:
          key: matchLabels
      properties:
        matchExpressions:
          description: matchExpressions is a list of label selector requirements.
            The requirements are ANDed.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector_matchExpressions_inner'
          type: array
        matchLabels:
          additionalProperties:
            type: string
          description: "matchLabels is a map of {key,value} pairs. A single {key,value}\
            \ in the matchLabels map is equivalent to an element of matchExpressions,\
            \ whose key field is \"key\", the operator is \"In\", and the values array\
            \ contains only \"value\". The requirements are ANDed."
          type: object
      type: object
      x-kubernetes-map-type: atomic
    ? database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_namespaceSelector
    : description: "A label query over the set of namespaces that the term applies\
        \ to. The term is applied to the union of the namespaces selected by this\
        \ field and the ones listed in the namespaces field. null selector and null\
        \ or empty namespaces list means \"this pod's namespace\". An empty selector\
        \ ({}) matches all namespaces."
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchLabels:
          key: matchLabels
      properties:
        matchExpressions:
          description: matchExpressions is a list of label selector requirements.
            The requirements are ANDed.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector_matchExpressions_inner'
          type: array
        matchLabels:
          additionalProperties:
            type: string
          description: "matchLabels is a map of {key,value} pairs. A single {key,value}\
            \ in the matchLabels map is equivalent to an element of matchExpressions,\
            \ whose key field is \"key\", the operator is \"In\", and the values array\
            \ contains only \"value\". The requirements are ANDed."
          type: object
      type: object
      x-kubernetes-map-type: atomic
    ? database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm
    : description: "Required. A pod affinity term, associated with the corresponding\
        \ weight."
      example:
        labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        namespaceSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      properties:
        labelSelector:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector'
        namespaceSelector:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_namespaceSelector'
        namespaces:
          description: namespaces specifies a static list of namespace names that
            the term applies to. The term is applied to the union of the namespaces
            listed in this field and the ones selected by namespaceSelector. null
            or empty namespaces list and null namespaceSelector means "this pod's
            namespace".
          items:
            type: string
          type: array
        topologyKey:
          description: "This pod should be co-located (affinity) or not co-located\
            \ (anti-affinity) with the pods matching the labelSelector in the specified\
            \ namespaces, where co-located is defined as running on a node whose value\
            \ of the label with key topologyKey matches that of any node on which\
            \ any of the selected pods is running. Empty topologyKey is not allowed."
          type: string
      required:
      - topologyKey
      type: object
    database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner:
      description: The weights of all of the matched WeightedPodAffinityTerm fields
        are added per-node to find the most preferred node(s)
      example:
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        weight: 2
      properties:
        podAffinityTerm:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm'
        weight:
          description: "weight associated with matching the corresponding podAffinityTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - podAffinityTerm
      - weight
      type: object
    database_cluster_spec_backup_storages_value_affinity_podAffinity_requiredDuringSchedulingIgnoredDuringExecution_inner:
      description: "Defines a set of pods (namely those matching the labelSelector\
        \ relative to the given namespace(s)) that this pod should be co-located (affinity)\
        \ or not co-located (anti-affinity) with, where co-located is defined as running\
        \ on a node whose value of the label with key <topologyKey> matches that of\
        \ any node on which a pod of the set of pods is running"
      example:
        labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        namespaceSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      properties:
        labelSelector:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector'
        namespaceSelector:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_namespaceSelector'
        namespaces:
          description: namespaces specifies a static list of namespace names that
            the term applies to. The term is applied to the union of the namespaces
            listed in this field and the ones selected by namespaceSelector. null
            or empty namespaces list and null namespaceSelector means "this pod's
            namespace".
          items:
            type: string
          type: array
        topologyKey:
          description: "This pod should be co-located (affinity) or not co-located\
            \ (anti-affinity) with the pods matching the labelSelector in the specified\
            \ namespaces, where co-located is defined as running on a node whose value\
            \ of the label with key topologyKey matches that of any node on which\
            \ any of the selected pods is running. Empty topologyKey is not allowed."
          type: string
      required:
      - topologyKey
      type: object
    database_cluster_spec_backup_storages_value_affinity_podAffinity:
      description: "Describes pod affinity scheduling rules (e.g. co-locate this pod\
        \ in the same node, zone, etc. as some other pod(s))."
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 2
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 2
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner'
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the affinity requirements specified by this field are not\
            \ met at scheduling time, the pod will not be scheduled onto the node.\
            \ If the affinity requirements specified by this field cease to be met\
            \ at some point during pod execution (e.g. due to a pod label update),\
            \ the system may or may not try to eventually evict the pod from its node.\
            \ When there are multiple elements, the lists of nodes corresponding to\
            \ each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_requiredDuringSchedulingIgnoredDuringExecution_inner'
          type: array
      type: object
    database_cluster_spec_backup_storages_value_affinity_podAntiAffinity:
      description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting\
        \ this pod in the same node, zone, etc. as some other pod(s))."
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 2
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 2
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the anti-affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling anti-affinity expressions, etc.), compute a\
            \ sum by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner'
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the anti-affinity requirements specified by this field\
            \ are not met at scheduling time, the pod will not be scheduled onto the\
            \ node. If the anti-affinity requirements specified by this field cease\
            \ to be met at some point during pod execution (e.g. due to a pod label\
            \ update), the system may or may not try to eventually evict the pod from\
            \ its node. When there are multiple elements, the lists of nodes corresponding\
            \ to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_requiredDuringSchedulingIgnoredDuringExecution_inner'
          type: array
      type: object
    database_cluster_spec_backup_storages_value_affinity:
      description: Affinity is a group of affinity scheduling rules.
      example:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 5
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 5
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 2
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 2
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 2
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 2
      properties:
        nodeAffinity:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_nodeAffinity'
        podAffinity:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity'
        podAntiAffinity:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAntiAffinity'
      type: object
    database_cluster_spec_backup_storages_value_podSecurityContext_seLinuxOptions:
      description: "The SELinux context to be applied to all containers. If unspecified,\
        \ the container runtime will allocate a random SELinux context for each container.\
        \  May also be set in SecurityContext.  If set in both SecurityContext and\
        \ PodSecurityContext, the value specified in SecurityContext takes precedence\
        \ for that container. Note that this field cannot be set when spec.os.name\
        \ is windows."
      example:
        role: role
        level: level
        type: type
        user: user
      properties:
        level:
          description: Level is SELinux level label that applies to the container.
          type: string
        role:
          description: Role is a SELinux role label that applies to the container.
          type: string
        type:
          description: Type is a SELinux type label that applies to the container.
          type: string
        user:
          description: User is a SELinux user label that applies to the container.
          type: string
      type: object
    database_cluster_spec_backup_storages_value_podSecurityContext_seccompProfile:
      description: The seccomp options to use by the containers in this pod. Note
        that this field cannot be set when spec.os.name is windows.
      example:
        localhostProfile: localhostProfile
        type: type
      properties:
        localhostProfile:
          description: "localhostProfile indicates a profile defined in a file on\
            \ the node should be used. The profile must be preconfigured on the node\
            \ to work. Must be a descending path, relative to the kubelet's configured\
            \ seccomp profile location. Must only be set if type is \"Localhost\"."
          type: string
        type:
          description: "type indicates which kind of seccomp profile will be applied.\
            \ Valid options are: \n Localhost - a profile defined in a file on the\
            \ node should be used. RuntimeDefault - the container runtime default\
            \ profile should be used. Unconfined - no profile should be applied."
          type: string
      required:
      - type
      type: object
    database_cluster_spec_backup_storages_value_podSecurityContext_sysctls_inner:
      description: Sysctl defines a kernel parameter to be set
      example:
        name: name
        value: value
      properties:
        name:
          description: Name of a property to set
          type: string
        value:
          description: Value of a property to set
          type: string
      required:
      - name
      - value
      type: object
    database_cluster_spec_backup_storages_value_podSecurityContext_windowsOptions:
      description: "The Windows specific settings applied to all containers. If unspecified,\
        \ the options within a container's SecurityContext will be used. If set in\
        \ both SecurityContext and PodSecurityContext, the value specified in SecurityContext\
        \ takes precedence. Note that this field cannot be set when spec.os.name is\
        \ linux."
      example:
        gmsaCredentialSpec: gmsaCredentialSpec
        runAsUserName: runAsUserName
        hostProcess: true
        gmsaCredentialSpecName: gmsaCredentialSpecName
      properties:
        gmsaCredentialSpec:
          description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
            inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName
            field.
          type: string
        gmsaCredentialSpecName:
          description: GMSACredentialSpecName is the name of the GMSA credential spec
            to use.
          type: string
        hostProcess:
          description: "HostProcess determines if a container should be run as a 'Host\
            \ Process' container. This field is alpha-level and will only be honored\
            \ by components that enable the WindowsHostProcessContainers feature flag.\
            \ Setting this field without the feature flag will result in errors when\
            \ validating the Pod. All of a Pod's containers must have the same effective\
            \ HostProcess value (it is not allowed to have a mix of HostProcess containers\
            \ and non-HostProcess containers).  In addition, if HostProcess is true\
            \ then HostNetwork must also be set to true."
          type: boolean
        runAsUserName:
          description: "The UserName in Windows to run the entrypoint of the container\
            \ process. Defaults to the user specified in image metadata if unspecified.\
            \ May also be set in PodSecurityContext. If set in both SecurityContext\
            \ and PodSecurityContext, the value specified in SecurityContext takes\
            \ precedence."
          type: string
      type: object
    database_cluster_spec_backup_storages_value_podSecurityContext:
      description: PodSecurityContext holds pod-level security attributes and common
        container settings. Some fields are also present in container.securityContext.  Field
        values of container.securityContext take precedence over field values of PodSecurityContext.
      example:
        runAsUser: 3
        seLinuxOptions:
          role: role
          level: level
          type: type
          user: user
        fsGroup: 7
        seccompProfile:
          localhostProfile: localhostProfile
          type: type
        windowsOptions:
          gmsaCredentialSpec: gmsaCredentialSpec
          runAsUserName: runAsUserName
          hostProcess: true
          gmsaCredentialSpecName: gmsaCredentialSpecName
        fsGroupChangePolicy: fsGroupChangePolicy
        supplementalGroups:
        - 2
        - 2
        runAsGroup: 9
        runAsNonRoot: true
        sysctls:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        fsGroup:
          description: "A special supplemental group that applies to all containers\
            \ in a pod. Some volume types allow the Kubelet to change the ownership\
            \ of that volume to be owned by the pod: \n 1. The owning GID will be\
            \ the FSGroup 2. The setgid bit is set (new files created in the volume\
            \ will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\
            \ \n If unset, the Kubelet will not modify the ownership and permissions\
            \ of any volume. Note that this field cannot be set when spec.os.name\
            \ is windows."
          format: int64
          type: integer
        fsGroupChangePolicy:
          description: "fsGroupChangePolicy defines behavior of changing ownership\
            \ and permission of the volume before being exposed inside Pod. This field\
            \ will only apply to volume types which support fsGroup based ownership(and\
            \ permissions). It will have no effect on ephemeral volume types such\
            \ as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\"\
            \ and \"Always\". If not specified, \"Always\" is used. Note that this\
            \ field cannot be set when spec.os.name is windows."
          type: string
        runAsGroup:
          description: "The GID to run the entrypoint of the container process. Uses\
            \ runtime default if unset. May also be set in SecurityContext.  If set\
            \ in both SecurityContext and PodSecurityContext, the value specified\
            \ in SecurityContext takes precedence for that container. Note that this\
            \ field cannot be set when spec.os.name is windows."
          format: int64
          type: integer
        runAsNonRoot:
          description: "Indicates that the container must run as a non-root user.\
            \ If true, the Kubelet will validate the image at runtime to ensure that\
            \ it does not run as UID 0 (root) and fail to start the container if it\
            \ does. If unset or false, no such validation will be performed. May also\
            \ be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence."
          type: boolean
        runAsUser:
          description: "The UID to run the entrypoint of the container process. Defaults\
            \ to user specified in image metadata if unspecified. May also be set\
            \ in SecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence for that container.\
            \ Note that this field cannot be set when spec.os.name is windows."
          format: int64
          type: integer
        seLinuxOptions:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_podSecurityContext_seLinuxOptions'
        seccompProfile:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_podSecurityContext_seccompProfile'
        supplementalGroups:
          description: "A list of groups applied to the first process run in each\
            \ container, in addition to the container's primary GID, the fsGroup (if\
            \ specified), and group memberships defined in the container image for\
            \ the uid of the container process. If unspecified, no additional groups\
            \ are added to any container. Note that group memberships defined in the\
            \ container image for the uid of the container process are still effective,\
            \ even if they are not included in this list. Note that this field cannot\
            \ be set when spec.os.name is windows."
          items:
            format: int64
            type: integer
          type: array
        sysctls:
          description: Sysctls hold a list of namespaced sysctls used for the pod.
            Pods with unsupported sysctls (by the container runtime) might fail to
            launch. Note that this field cannot be set when spec.os.name is windows.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_podSecurityContext_sysctls_inner'
          type: array
        windowsOptions:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_podSecurityContext_windowsOptions'
      type: object
    database_cluster_spec_backup_storages_value_storageProvider:
      description: BackupStorageProviderSpec represents set of settings to configure
        cloud provider.
      example:
        bucket: bucket
        storageClass: storageClass
        containerName: containerName
        credentialsSecret: credentialsSecret
        endpointUrl: endpointUrl
        prefix: prefix
        region: region
      properties:
        bucket:
          type: string
        containerName:
          description: A container name is a valid DNS name that conforms to the Azure
            naming rules.
          type: string
        credentialsSecret:
          type: string
        endpointUrl:
          type: string
        prefix:
          type: string
        region:
          type: string
        storageClass:
          description: "STANDARD, NEARLINE, COLDLINE, ARCHIVE for GCP Hot (Frequently\
            \ accessed or modified data), Cool (Infrequently accessed or modified\
            \ data), Archive (Rarely accessed or modified data) for Azure."
          type: string
      required:
      - credentialsSecret
      type: object
    database_cluster_spec_backup_storages_value_tolerations_inner:
      description: "The pod this Toleration is attached to tolerates any taint that\
        \ matches the triple <key,value,effect> using the matching operator <operator>."
      example:
        effect: effect
        tolerationSeconds: 4
        value: value
        key: key
        operator: operator
      properties:
        effect:
          description: "Effect indicates the taint effect to match. Empty means match\
            \ all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule\
            \ and NoExecute."
          type: string
        key:
          description: "Key is the taint key that the toleration applies to. Empty\
            \ means match all taint keys. If the key is empty, operator must be Exists;\
            \ this combination means to match all values and all keys."
          type: string
        operator:
          description: "Operator represents a key's relationship to the value. Valid\
            \ operators are Exists and Equal. Defaults to Equal. Exists is equivalent\
            \ to wildcard for value, so that a pod can tolerate all taints of a particular\
            \ category."
          type: string
        tolerationSeconds:
          description: "TolerationSeconds represents the period of time the toleration\
            \ (which must be of effect NoExecute, otherwise this field is ignored)\
            \ tolerates the taint. By default, it is not set, which means tolerate\
            \ the taint forever (do not evict). Zero and negative values will be treated\
            \ as 0 (evict immediately) by the system."
          format: int64
          type: integer
        value:
          description: "Value is the taint value the toleration matches to. If the\
            \ operator is Exists, the value should be empty, otherwise just a regular\
            \ string."
          type: string
      type: object
    database_cluster_spec_backup_storages_value_volumeSpec_emptyDir_sizeLimit:
      anyOf:
      - type: integer
      - type: string
      description: "sizeLimit is the total amount of local storage required for this\
        \ EmptyDir volume. The size limit is also applicable for memory medium. The\
        \ maximum usage on memory medium EmptyDir would be the minimum value between\
        \ the SizeLimit specified here and the sum of memory limits of all containers\
        \ in a pod. The default is nil which means that the limit is undefined. More\
        \ info: http://kubernetes.io/docs/user-guide/volumes#emptydir"
      pattern: "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\
        +|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
      x-kubernetes-int-or-string: true
    database_cluster_spec_backup_storages_value_volumeSpec_emptyDir:
      description: EmptyDir to use as data volume for mysql. EmptyDir represents a
        temporary directory that shares a pod's lifetime.
      example:
        sizeLimit: null
        medium: medium
      properties:
        medium:
          description: "medium represents what type of storage medium should back\
            \ this directory. The default is \"\" which means to use the node's default\
            \ medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
          type: string
        sizeLimit:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_emptyDir_sizeLimit'
      type: object
    database_cluster_spec_backup_storages_value_volumeSpec_hostPath:
      description: HostPath to use as data volume for mysql. HostPath represents a
        pre-existing file or directory on the host machine that is directly exposed
        to the container.
      example:
        path: path
        type: type
      properties:
        path:
          description: "path of the directory on the host. If the path is a symlink,\
            \ it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
          type: string
        type:
          description: "type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
          type: string
      required:
      - path
      type: object
    database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_dataSource:
      description: "dataSource field can be used to specify either: * An existing\
        \ VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing\
        \ PVC (PersistentVolumeClaim) If the provisioner or an external controller\
        \ can support the specified data source, it will create a new volume based\
        \ on the contents of the specified data source. When the AnyVolumeDataSource\
        \ feature gate is enabled, dataSource contents will be copied to dataSourceRef,\
        \ and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace\
        \ is not specified. If the namespace is specified, then dataSourceRef will\
        \ not be copied to dataSource."
      example:
        apiGroup: apiGroup
        kind: kind
        name: name
      properties:
        apiGroup:
          description: "APIGroup is the group for the resource being referenced. If\
            \ APIGroup is not specified, the specified Kind must be in the core API\
            \ group. For any other third-party types, APIGroup is required."
          type: string
        kind:
          description: Kind is the type of resource being referenced
          type: string
        name:
          description: Name is the name of resource being referenced
          type: string
      required:
      - kind
      - name
      type: object
      x-kubernetes-map-type: atomic
    database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_dataSourceRef:
      description: "dataSourceRef specifies the object from which to populate the\
        \ volume with data, if a non-empty volume is desired. This may be any object\
        \ from a non-empty API group (non core object) or a PersistentVolumeClaim\
        \ object. When this field is specified, volume binding will only succeed if\
        \ the type of the specified object matches some installed volume populator\
        \ or dynamic provisioner. This field will replace the functionality of the\
        \ dataSource field and as such if both fields are non-empty, they must have\
        \ the same value. For backwards compatibility, when namespace isn't specified\
        \ in dataSourceRef, both fields (dataSource and dataSourceRef) will be set\
        \ to the same value automatically if one of them is empty and the other is\
        \ non-empty. When namespace is specified in dataSourceRef, dataSource isn't\
        \ set to the same value and must be empty. There are three important differences\
        \ between dataSource and dataSourceRef: * While dataSource only allows two\
        \ specific types of objects, dataSourceRef allows any non-core object, as\
        \ well as PersistentVolumeClaim objects. * While dataSource ignores disallowed\
        \ values (dropping them), dataSourceRef preserves all values, and generates\
        \ an error if a disallowed value is specified. * While dataSource only allows\
        \ local objects, dataSourceRef allows objects in any namespaces. (Beta) Using\
        \ this field requires the AnyVolumeDataSource feature gate to be enabled.\
        \ (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource\
        \ feature gate to be enabled."
      example:
        apiGroup: apiGroup
        kind: kind
        name: name
        namespace: namespace
      properties:
        apiGroup:
          description: "APIGroup is the group for the resource being referenced. If\
            \ APIGroup is not specified, the specified Kind must be in the core API\
            \ group. For any other third-party types, APIGroup is required."
          type: string
        kind:
          description: Kind is the type of resource being referenced
          type: string
        name:
          description: Name is the name of resource being referenced
          type: string
        namespace:
          description: "Namespace is the namespace of resource being referenced Note\
            \ that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant\
            \ object is required in the referent namespace to allow that namespace's\
            \ owner to accept the reference. See the ReferenceGrant documentation\
            \ for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource\
            \ feature gate to be enabled."
          type: string
      required:
      - kind
      - name
      type: object
    database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_resources:
      description: "resources represents the minimum resources the volume should have.\
        \ If RecoverVolumeExpansionFailure feature is enabled users are allowed to\
        \ specify resource requirements that are lower than previous value but must\
        \ still be higher than capacity recorded in the status field of the claim.\
        \ More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
      example:
        claims:
        - name: name
        - name: name
        requests:
          key: null
        limits:
          key: null
      properties:
        claims:
          description: "Claims lists the names of resources, defined in spec.resourceClaims,\
            \ that are used by this container. \n This is an alpha field and requires\
            \ enabling the DynamicResourceAllocation feature gate. \n This field is\
            \ immutable. It can only be set for containers."
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_resources_claims_inner'
          type: array
          x-kubernetes-list-map-keys:
          - name
          x-kubernetes-list-type: map
        limits:
          additionalProperties:
            $ref: '#/components/schemas/database_cluster_spec_backup_resources_limits_value'
          description: "Limits describes the maximum amount of compute resources allowed.\
            \ More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
        requests:
          additionalProperties:
            $ref: '#/components/schemas/database_cluster_spec_backup_resources_limits_value'
          description: "Requests describes the minimum amount of compute resources\
            \ required. If Requests is omitted for a container, it defaults to Limits\
            \ if that is explicitly specified, otherwise to an implementation-defined\
            \ value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
      type: object
    database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_selector:
      description: selector is a label query over volumes to consider for binding.
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchLabels:
          key: matchLabels
      properties:
        matchExpressions:
          description: matchExpressions is a list of label selector requirements.
            The requirements are ANDed.
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector_matchExpressions_inner'
          type: array
        matchLabels:
          additionalProperties:
            type: string
          description: "matchLabels is a map of {key,value} pairs. A single {key,value}\
            \ in the matchLabels map is equivalent to an element of matchExpressions,\
            \ whose key field is \"key\", the operator is \"In\", and the values array\
            \ contains only \"value\". The requirements are ANDed."
          type: object
      type: object
      x-kubernetes-map-type: atomic
    database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim:
      description: "PersistentVolumeClaim to specify PVC spec for the volume for mysql\
        \ data. It has the highest level of precedence, followed by HostPath and EmptyDir.\
        \ And represents the PVC specification."
      example:
        storageClassName: storageClassName
        dataSourceRef:
          apiGroup: apiGroup
          kind: kind
          name: name
          namespace: namespace
        volumeName: volumeName
        resources:
          claims:
          - name: name
          - name: name
          requests:
            key: null
          limits:
            key: null
        selector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        accessModes:
        - accessModes
        - accessModes
        dataSource:
          apiGroup: apiGroup
          kind: kind
          name: name
        volumeMode: volumeMode
      properties:
        accessModes:
          description: "accessModes contains the desired access modes the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            type: string
          type: array
        dataSource:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_dataSource'
        dataSourceRef:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_dataSourceRef'
        resources:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_resources'
        selector:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim_selector'
        storageClassName:
          description: "storageClassName is the name of the StorageClass required\
            \ by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
          type: string
        volumeMode:
          description: volumeMode defines what type of volume is required by the claim.
            Value of Filesystem is implied when not included in claim spec.
          type: string
        volumeName:
          description: volumeName is the binding reference to the PersistentVolume
            backing this claim.
          type: string
      type: object
    database_cluster_spec_backup_storages_value_volumeSpec:
      description: VolumeSpec represents a specification to configure volume for underlying
        database.
      example:
        emptyDir:
          sizeLimit: null
          medium: medium
        persistentVolumeClaim:
          storageClassName: storageClassName
          dataSourceRef:
            apiGroup: apiGroup
            kind: kind
            name: name
            namespace: namespace
          volumeName: volumeName
          resources:
            claims:
            - name: name
            - name: name
            requests:
              key: null
            limits:
              key: null
          selector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          accessModes:
          - accessModes
          - accessModes
          dataSource:
            apiGroup: apiGroup
            kind: kind
            name: name
          volumeMode: volumeMode
        hostPath:
          path: path
          type: type
      properties:
        emptyDir:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_emptyDir'
        hostPath:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_hostPath'
        persistentVolumeClaim:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec_persistentVolumeClaim'
      type: object
    database_cluster_spec_backup_storages_value:
      description: BackupStorageSpec represents set of settings to configure backup
        storage.
      example:
        volumeSpec:
          emptyDir:
            sizeLimit: null
            medium: medium
          persistentVolumeClaim:
            storageClassName: storageClassName
            dataSourceRef:
              apiGroup: apiGroup
              kind: kind
              name: name
              namespace: namespace
            volumeName: volumeName
            resources:
              claims:
              - name: name
              - name: name
              requests:
                key: null
              limits:
                key: null
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            accessModes:
            - accessModes
            - accessModes
            dataSource:
              apiGroup: apiGroup
              kind: kind
              name: name
            volumeMode: volumeMode
          hostPath:
            path: path
            type: type
        storageProvider:
          bucket: bucket
          storageClass: storageClass
          containerName: containerName
          credentialsSecret: credentialsSecret
          endpointUrl: endpointUrl
          prefix: prefix
          region: region
        podSecurityContext:
          runAsUser: 3
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          fsGroup: 7
          seccompProfile:
            localhostProfile: localhostProfile
            type: type
          windowsOptions:
            gmsaCredentialSpec: gmsaCredentialSpec
            runAsUserName: runAsUserName
            hostProcess: true
            gmsaCredentialSpecName: gmsaCredentialSpecName
          fsGroupChangePolicy: fsGroupChangePolicy
          supplementalGroups:
          - 2
          - 2
          runAsGroup: 9
          runAsNonRoot: true
          sysctls:
          - name: name
            value: value
          - name: name
            value: value
        priorityClassName: priorityClassName
        verifyTLS: true
        annotations:
          key: annotations
        resources:
          claims:
          - name: name
          - name: name
          requests:
            key: null
          limits:
            key: null
        type: type
        labels:
          key: labels
        nodeSelector:
          key: nodeSelector
        runtimeClassName: runtimeClassName
        tolerations:
        - effect: effect
          tolerationSeconds: 4
          value: value
          key: key
          operator: operator
        - effect: effect
          tolerationSeconds: 4
          value: value
          key: key
          operator: operator
        containerSecurityContext:
          privileged: true
          runAsUser: 6
          capabilities:
            add:
            - add
            - add
            drop:
            - drop
            - drop
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          seccompProfile:
            localhostProfile: localhostProfile
            type: type
          windowsOptions:
            gmsaCredentialSpec: gmsaCredentialSpec
            runAsUserName: runAsUserName
            hostProcess: true
            gmsaCredentialSpecName: gmsaCredentialSpecName
          procMount: procMount
          allowPrivilegeEscalation: true
          runAsGroup: 0
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        schedulerName: schedulerName
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 5
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 5
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 2
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 2
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 2
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 2
      properties:
        affinity:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_affinity'
        annotations:
          additionalProperties:
            type: string
          type: object
        containerSecurityContext:
          $ref: '#/components/schemas/database_cluster_spec_backup_containerSecurityContext'
        labels:
          additionalProperties:
            type: string
          type: object
        nodeSelector:
          additionalProperties:
            type: string
          type: object
        podSecurityContext:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_podSecurityContext'
        priorityClassName:
          type: string
        resources:
          $ref: '#/components/schemas/database_cluster_spec_backup_resources'
        runtimeClassName:
          type: string
        schedulerName:
          type: string
        storageProvider:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_storageProvider'
        tolerations:
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_tolerations_inner'
          type: array
        type:
          description: BackupStorageType represents backup storage type.
          type: string
        verifyTLS:
          type: boolean
        volumeSpec:
          $ref: '#/components/schemas/database_cluster_spec_backup_storages_value_volumeSpec'
      required:
      - type
      type: object
    database_cluster_spec_backup:
      description: Backup contains backup settings.
      example:
        storages:
          key:
            volumeSpec:
              emptyDir:
                sizeLimit: null
                medium: medium
              persistentVolumeClaim:
                storageClassName: storageClassName
                dataSourceRef:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                  namespace: namespace
                volumeName: volumeName
                resources:
                  claims:
                  - name: name
                  - name: name
                  requests:
                    key: null
                  limits:
                    key: null
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                accessModes:
                - accessModes
                - accessModes
                dataSource:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                volumeMode: volumeMode
              hostPath:
                path: path
                type: type
            storageProvider:
              bucket: bucket
              storageClass: storageClass
              containerName: containerName
              credentialsSecret: credentialsSecret
              endpointUrl: endpointUrl
              prefix: prefix
              region: region
            podSecurityContext:
              runAsUser: 3
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 7
              seccompProfile:
                localhostProfile: localhostProfile
                type: type
              windowsOptions:
                gmsaCredentialSpec: gmsaCredentialSpec
                runAsUserName: runAsUserName
                hostProcess: true
                gmsaCredentialSpecName: gmsaCredentialSpecName
              fsGroupChangePolicy: fsGroupChangePolicy
              supplementalGroups:
              - 2
              - 2
              runAsGroup: 9
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            priorityClassName: priorityClassName
            verifyTLS: true
            annotations:
              key: annotations
            resources:
              claims:
              - name: name
              - name: name
              requests:
                key: null
              limits:
                key: null
            type: type
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            runtimeClassName: runtimeClassName
            tolerations:
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            containerSecurityContext:
              privileged: true
              runAsUser: 6
              capabilities:
                add:
                - add
                - add
                drop:
                - drop
                - drop
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              seccompProfile:
                localhostProfile: localhostProfile
                type: type
              windowsOptions:
                gmsaCredentialSpec: gmsaCredentialSpec
                runAsUserName: runAsUserName
                hostProcess: true
                gmsaCredentialSpecName: gmsaCredentialSpecName
              procMount: procMount
              allowPrivilegeEscalation: true
              runAsGroup: 0
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            schedulerName: schedulerName
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 5
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 5
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 2
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 2
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 2
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 2
        image: image
        imagePullPolicy: imagePullPolicy
        initImage: initImage
        schedule:
        - schedule: schedule
          keep: 5
          name: name
          compressionType: compressionType
          compressionLevel: 1
          enabled: true
          storageName: storageName
        - schedule: schedule
          keep: 5
          name: name
          compressionType: compressionType
          compressionLevel: 1
          enabled: true
          storageName: storageName
        serviceAccountName: serviceAccountName
        imagePullSecrets:
        - name: name
        - name: name
        annotations:
          key: annotations
        resources:
          claims:
          - name: name
          - name: name
          requests:
            key: null
          limits:
            key: null
        containerSecurityContext:
          privileged: true
          runAsUser: 6
          capabilities:
            add:
            - add
            - add
            drop:
            - drop
            - drop
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          seccompProfile:
            localhostProfile: localhostProfile
            type: type
          windowsOptions:
            gmsaCredentialSpec: gmsaCredentialSpec
            runAsUserName: runAsUserName
            hostProcess: true
            gmsaCredentialSpecName: gmsaCredentialSpecName
          procMount: procMount
          allowPrivilegeEscalation: true
          runAsGroup: 0
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        enabled: true
        labels:
          key: labels
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        containerSecurityContext:
          $ref: '#/components/schemas/database_cluster_spec_backup_containerSecurityContext'
        enabled:
          type: boolean
        image:
          type: string
        imagePullPolicy:
          description: PullPolicy describes a policy for if/when to pull a container
            image
          type: string
        imagePullSecrets:
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_imagePullSecrets_inner'
          type: array
        initImage:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        resources:
          $ref: '#/components/schemas/database_cluster_spec_backup_resources'
        schedule:
          items:
            $ref: '#/components/schemas/database_cluster_spec_backup_schedule_inner'
          type: array
        serviceAccountName:
          type: string
        storages:
          additionalProperties:
            $ref: '#/components/schemas/database_cluster_spec_backup_storages_value'
          type: object
      type: object
    database_cluster_spec_dbInstance:
      description: DBInstance represents resource requests for a database cluster.
      example:
        diskSize: null
        memory: null
        storageClassName: storageClassName
        cpu: null
      properties:
        cpu:
          $ref: '#/components/schemas/database_cluster_spec_backup_resources_limits_value'
        diskSize:
          $ref: '#/components/schemas/database_cluster_spec_backup_resources_limits_value'
        memory:
          $ref: '#/components/schemas/database_cluster_spec_backup_resources_limits_value'
        storageClassName:
          type: string
      type: object
    database_cluster_spec_loadBalancer:
      description: LoadBalancer contains a load balancer settings. For PXC it's haproxy
        or proxysql. For PSMDB it's mongos.
      example:
        image: image
        size: 1
        configuration: configuration
        exposeType: exposeType
        annotations:
          key: annotations
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        resources:
          claims:
          - name: name
          - name: name
          requests:
            key: null
          limits:
            key: null
        type: type
        trafficPolicy: trafficPolicy
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        configuration:
          type: string
        exposeType:
          description: Service Type string describes ingress methods for a service
          type: string
        image:
          type: string
        loadBalancerSourceRanges:
          items:
            type: string
          type: array
        resources:
          $ref: '#/components/schemas/database_cluster_spec_backup_resources'
        size:
          format: int32
          type: integer
        trafficPolicy:
          description: "ServiceExternalTrafficPolicyType describes how nodes distribute\
            \ service traffic they receive on one of the Service's \"externally-facing\"\
            \ addresses (NodePorts, ExternalIPs, and LoadBalancer IPs)."
          type: string
        type:
          description: "LoadBalancerType contains supported loadbalancers. It can\
            \ be proxysql or haproxy for PXC clusters, mongos for PSMDB clusters or\
            \ pgbouncer for Postgresql clusters."
          type: string
      type: object
    database_cluster_spec_monitoring_pmm:
      description: PMMSpec contains PMM settings.
      example:
        image: image
        password: password
        serverUser: serverUser
        publicAddress: publicAddress
        login: login
        serverHost: serverHost
      properties:
        image:
          type: string
        login:
          type: string
        password:
          type: string
        publicAddress:
          type: string
        serverHost:
          type: string
        serverUser:
          type: string
      type: object
    database_cluster_spec_monitoring:
      description: Monitoring contains a monitoring settings.
      example:
        imagePullPolicy: imagePullPolicy
        pmm:
          image: image
          password: password
          serverUser: serverUser
          publicAddress: publicAddress
          login: login
          serverHost: serverHost
        runtimeClassName: runtimeClassName
        resources:
          claims:
          - name: name
          - name: name
          requests:
            key: null
          limits:
            key: null
        containerSecurityContext:
          privileged: true
          runAsUser: 6
          capabilities:
            add:
            - add
            - add
            drop:
            - drop
            - drop
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          seccompProfile:
            localhostProfile: localhostProfile
            type: type
          windowsOptions:
            gmsaCredentialSpec: gmsaCredentialSpec
            runAsUserName: runAsUserName
            hostProcess: true
            gmsaCredentialSpecName: gmsaCredentialSpecName
          procMount: procMount
          allowPrivilegeEscalation: true
          runAsGroup: 0
          runAsNonRoot: true
          readOnlyRootFilesystem: true
      properties:
        containerSecurityContext:
          $ref: '#/components/schemas/database_cluster_spec_backup_containerSecurityContext'
        imagePullPolicy:
          description: PullPolicy describes a policy for if/when to pull a container
            image
          type: string
        pmm:
          $ref: '#/components/schemas/database_cluster_spec_monitoring_pmm'
        resources:
          $ref: '#/components/schemas/database_cluster_spec_backup_resources'
        runtimeClassName:
          type: string
      type: object
    database_cluster_spec:
      description: DatabaseSpec defines the desired state of Database.
      example:
        databaseType: databaseType
        dbInstance:
          diskSize: null
          memory: null
          storageClassName: storageClassName
          cpu: null
        backup:
          storages:
            key:
              volumeSpec:
                emptyDir:
                  sizeLimit: null
                  medium: medium
                persistentVolumeClaim:
                  storageClassName: storageClassName
                  dataSourceRef:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                    namespace: namespace
                  volumeName: volumeName
                  resources:
                    claims:
                    - name: name
                    - name: name
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                hostPath:
                  path: path
                  type: type
              storageProvider:
                bucket: bucket
                storageClass: storageClass
                containerName: containerName
                credentialsSecret: credentialsSecret
                endpointUrl: endpointUrl
                prefix: prefix
                region: region
              podSecurityContext:
                runAsUser: 3
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                fsGroup: 7
                seccompProfile:
                  localhostProfile: localhostProfile
                  type: type
                windowsOptions:
                  gmsaCredentialSpec: gmsaCredentialSpec
                  runAsUserName: runAsUserName
                  hostProcess: true
                  gmsaCredentialSpecName: gmsaCredentialSpecName
                fsGroupChangePolicy: fsGroupChangePolicy
                supplementalGroups:
                - 2
                - 2
                runAsGroup: 9
                runAsNonRoot: true
                sysctls:
                - name: name
                  value: value
                - name: name
                  value: value
              priorityClassName: priorityClassName
              verifyTLS: true
              annotations:
                key: annotations
              resources:
                claims:
                - name: name
                - name: name
                requests:
                  key: null
                limits:
                  key: null
              type: type
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              runtimeClassName: runtimeClassName
              tolerations:
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              containerSecurityContext:
                privileged: true
                runAsUser: 6
                capabilities:
                  add:
                  - add
                  - add
                  drop:
                  - drop
                  - drop
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                seccompProfile:
                  localhostProfile: localhostProfile
                  type: type
                windowsOptions:
                  gmsaCredentialSpec: gmsaCredentialSpec
                  runAsUserName: runAsUserName
                  hostProcess: true
                  gmsaCredentialSpecName: gmsaCredentialSpecName
                procMount: procMount
                allowPrivilegeEscalation: true
                runAsGroup: 0
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              schedulerName: schedulerName
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 5
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 5
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 2
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 2
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 2
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 2
          image: image
          imagePullPolicy: imagePullPolicy
          initImage: initImage
          schedule:
          - schedule: schedule
            keep: 5
            name: name
            compressionType: compressionType
            compressionLevel: 1
            enabled: true
            storageName: storageName
          - schedule: schedule
            keep: 5
            name: name
            compressionType: compressionType
            compressionLevel: 1
            enabled: true
            storageName: storageName
          serviceAccountName: serviceAccountName
          imagePullSecrets:
          - name: name
          - name: name
          annotations:
            key: annotations
          resources:
            claims:
            - name: name
            - name: name
            requests:
              key: null
            limits:
              key: null
          containerSecurityContext:
            privileged: true
            runAsUser: 6
            capabilities:
              add:
              - add
              - add
              drop:
              - drop
              - drop
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            seccompProfile:
              localhostProfile: localhostProfile
              type: type
            windowsOptions:
              gmsaCredentialSpec: gmsaCredentialSpec
              runAsUserName: runAsUserName
              hostProcess: true
              gmsaCredentialSpecName: gmsaCredentialSpecName
            procMount: procMount
            allowPrivilegeEscalation: true
            runAsGroup: 0
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          enabled: true
          labels:
            key: labels
        databaseImage: databaseImage
        databaseConfig: databaseConfig
        loadBalancer:
          image: image
          size: 1
          configuration: configuration
          exposeType: exposeType
          annotations:
            key: annotations
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          resources:
            claims:
            - name: name
            - name: name
            requests:
              key: null
            limits:
              key: null
          type: type
          trafficPolicy: trafficPolicy
        monitoring:
          imagePullPolicy: imagePullPolicy
          pmm:
            image: image
            password: password
            serverUser: serverUser
            publicAddress: publicAddress
            login: login
            serverHost: serverHost
          runtimeClassName: runtimeClassName
          resources:
            claims:
            - name: name
            - name: name
            requests:
              key: null
            limits:
              key: null
          containerSecurityContext:
            privileged: true
            runAsUser: 6
            capabilities:
              add:
              - add
              - add
              drop:
              - drop
              - drop
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            seccompProfile:
              localhostProfile: localhostProfile
              type: type
            windowsOptions:
              gmsaCredentialSpec: gmsaCredentialSpec
              runAsUserName: runAsUserName
              hostProcess: true
              gmsaCredentialSpecName: gmsaCredentialSpecName
            procMount: procMount
            allowPrivilegeEscalation: true
            runAsGroup: 0
            runAsNonRoot: true
            readOnlyRootFilesystem: true
        secretsName: secretsName
        pause: true
        clusterSize: 7
      properties:
        backup:
          $ref: '#/components/schemas/database_cluster_spec_backup'
        clusterSize:
          description: ClusterSize is amount of nodes that required for the cluster.
            A database starts in cluster mode if clusterSize >= 3.
          format: int32
          type: integer
        databaseConfig:
          description: DatabaseConfig contains a config settings for the specified
            database.
          type: string
        databaseImage:
          description: DatabaseVersion sets from version service and uses the recommended
            version by default.
          type: string
        databaseType:
          description: Database type stands for supported databases by the PMM API
            Now it's pxc or psmdb types but we can extend it.
          type: string
        dbInstance:
          $ref: '#/components/schemas/database_cluster_spec_dbInstance'
        loadBalancer:
          $ref: '#/components/schemas/database_cluster_spec_loadBalancer'
        monitoring:
          $ref: '#/components/schemas/database_cluster_spec_monitoring'
        pause:
          description: Pause represents is a cluster paused or not.
          type: boolean
        secretsName:
          description: SecretsName contains name of a secrets file for a database
            cluster.
          type: string
      required:
      - clusterSize
      - databaseConfig
      - databaseImage
      - databaseType
      - dbInstance
      type: object
    database_cluster_status:
      description: DatabaseClusterStatus defines the observed state of Database.
      example:
        size: 1
        ready: 1
        host: host
        message: message
        status: status
      properties:
        host:
          type: string
        message:
          type: string
        ready:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        status:
          description: AppState is used to represent cluster's state.
          type: string
      type: object
