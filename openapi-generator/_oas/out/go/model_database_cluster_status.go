/*
Percona Everest schema

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DatabaseClusterStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseClusterStatus{}

// DatabaseClusterStatus DatabaseClusterStatus defines the observed state of Database.
type DatabaseClusterStatus struct {
	Host *string `json:"host,omitempty"`
	Message *string `json:"message,omitempty"`
	Ready *int32 `json:"ready,omitempty"`
	Size *int32 `json:"size,omitempty"`
	// AppState is used to represent cluster's state.
	Status *string `json:"status,omitempty"`
}

// NewDatabaseClusterStatus instantiates a new DatabaseClusterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseClusterStatus() *DatabaseClusterStatus {
	this := DatabaseClusterStatus{}
	return &this
}

// NewDatabaseClusterStatusWithDefaults instantiates a new DatabaseClusterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseClusterStatusWithDefaults() *DatabaseClusterStatus {
	this := DatabaseClusterStatus{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *DatabaseClusterStatus) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterStatus) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *DatabaseClusterStatus) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *DatabaseClusterStatus) SetHost(v string) {
	o.Host = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DatabaseClusterStatus) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterStatus) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DatabaseClusterStatus) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DatabaseClusterStatus) SetMessage(v string) {
	o.Message = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *DatabaseClusterStatus) GetReady() int32 {
	if o == nil || IsNil(o.Ready) {
		var ret int32
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterStatus) GetReadyOk() (*int32, bool) {
	if o == nil || IsNil(o.Ready) {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *DatabaseClusterStatus) HasReady() bool {
	if o != nil && !IsNil(o.Ready) {
		return true
	}

	return false
}

// SetReady gets a reference to the given int32 and assigns it to the Ready field.
func (o *DatabaseClusterStatus) SetReady(v int32) {
	o.Ready = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DatabaseClusterStatus) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterStatus) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DatabaseClusterStatus) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *DatabaseClusterStatus) SetSize(v int32) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DatabaseClusterStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DatabaseClusterStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DatabaseClusterStatus) SetStatus(v string) {
	o.Status = &v
}

func (o DatabaseClusterStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseClusterStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Ready) {
		toSerialize["ready"] = o.Ready
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableDatabaseClusterStatus struct {
	value *DatabaseClusterStatus
	isSet bool
}

func (v NullableDatabaseClusterStatus) Get() *DatabaseClusterStatus {
	return v.value
}

func (v *NullableDatabaseClusterStatus) Set(val *DatabaseClusterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseClusterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseClusterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseClusterStatus(val *DatabaseClusterStatus) *NullableDatabaseClusterStatus {
	return &NullableDatabaseClusterStatus{value: val, isSet: true}
}

func (v NullableDatabaseClusterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseClusterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


