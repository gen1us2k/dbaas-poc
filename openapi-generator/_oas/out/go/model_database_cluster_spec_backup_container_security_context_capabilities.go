/*
Percona Everest schema

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DatabaseClusterSpecBackupContainerSecurityContextCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatabaseClusterSpecBackupContainerSecurityContextCapabilities{}

// DatabaseClusterSpecBackupContainerSecurityContextCapabilities The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
type DatabaseClusterSpecBackupContainerSecurityContextCapabilities struct {
	// Added capabilities
	Add []string `json:"add,omitempty"`
	// Removed capabilities
	Drop []string `json:"drop,omitempty"`
}

// NewDatabaseClusterSpecBackupContainerSecurityContextCapabilities instantiates a new DatabaseClusterSpecBackupContainerSecurityContextCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatabaseClusterSpecBackupContainerSecurityContextCapabilities() *DatabaseClusterSpecBackupContainerSecurityContextCapabilities {
	this := DatabaseClusterSpecBackupContainerSecurityContextCapabilities{}
	return &this
}

// NewDatabaseClusterSpecBackupContainerSecurityContextCapabilitiesWithDefaults instantiates a new DatabaseClusterSpecBackupContainerSecurityContextCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatabaseClusterSpecBackupContainerSecurityContextCapabilitiesWithDefaults() *DatabaseClusterSpecBackupContainerSecurityContextCapabilities {
	this := DatabaseClusterSpecBackupContainerSecurityContextCapabilities{}
	return &this
}

// GetAdd returns the Add field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) GetAdd() []string {
	if o == nil || IsNil(o.Add) {
		var ret []string
		return ret
	}
	return o.Add
}

// GetAddOk returns a tuple with the Add field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) GetAddOk() ([]string, bool) {
	if o == nil || IsNil(o.Add) {
		return nil, false
	}
	return o.Add, true
}

// HasAdd returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) HasAdd() bool {
	if o != nil && !IsNil(o.Add) {
		return true
	}

	return false
}

// SetAdd gets a reference to the given []string and assigns it to the Add field.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) SetAdd(v []string) {
	o.Add = v
}

// GetDrop returns the Drop field value if set, zero value otherwise.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) GetDrop() []string {
	if o == nil || IsNil(o.Drop) {
		var ret []string
		return ret
	}
	return o.Drop
}

// GetDropOk returns a tuple with the Drop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) GetDropOk() ([]string, bool) {
	if o == nil || IsNil(o.Drop) {
		return nil, false
	}
	return o.Drop, true
}

// HasDrop returns a boolean if a field has been set.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) HasDrop() bool {
	if o != nil && !IsNil(o.Drop) {
		return true
	}

	return false
}

// SetDrop gets a reference to the given []string and assigns it to the Drop field.
func (o *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) SetDrop(v []string) {
	o.Drop = v
}

func (o DatabaseClusterSpecBackupContainerSecurityContextCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatabaseClusterSpecBackupContainerSecurityContextCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Add) {
		toSerialize["add"] = o.Add
	}
	if !IsNil(o.Drop) {
		toSerialize["drop"] = o.Drop
	}
	return toSerialize, nil
}

type NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities struct {
	value *DatabaseClusterSpecBackupContainerSecurityContextCapabilities
	isSet bool
}

func (v NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities) Get() *DatabaseClusterSpecBackupContainerSecurityContextCapabilities {
	return v.value
}

func (v *NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities) Set(val *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities(val *DatabaseClusterSpecBackupContainerSecurityContextCapabilities) *NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities {
	return &NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities{value: val, isSet: true}
}

func (v NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatabaseClusterSpecBackupContainerSecurityContextCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


