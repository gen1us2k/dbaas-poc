/*
 * Percona Everest schema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



// DatabaseClusterSpecBackupStoragesValueAffinity - Affinity is a group of affinity scheduling rules.
type DatabaseClusterSpecBackupStoragesValueAffinity struct {

	NodeAffinity DatabaseClusterSpecBackupStoragesValueAffinityNodeAffinity `json:"nodeAffinity,omitempty"`

	PodAffinity DatabaseClusterSpecBackupStoragesValueAffinityPodAffinity `json:"podAffinity,omitempty"`

	PodAntiAffinity DatabaseClusterSpecBackupStoragesValueAffinityPodAntiAffinity `json:"podAntiAffinity,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *DatabaseClusterSpecBackupStoragesValueAffinity) UnmarshalJSON(data []byte) error {

	type Alias DatabaseClusterSpecBackupStoragesValueAffinity // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertDatabaseClusterSpecBackupStoragesValueAffinityRequired checks if the required fields are not zero-ed
func AssertDatabaseClusterSpecBackupStoragesValueAffinityRequired(obj DatabaseClusterSpecBackupStoragesValueAffinity) error {
	if err := AssertDatabaseClusterSpecBackupStoragesValueAffinityNodeAffinityRequired(obj.NodeAffinity); err != nil {
		return err
	}
	if err := AssertDatabaseClusterSpecBackupStoragesValueAffinityPodAffinityRequired(obj.PodAffinity); err != nil {
		return err
	}
	if err := AssertDatabaseClusterSpecBackupStoragesValueAffinityPodAntiAffinityRequired(obj.PodAntiAffinity); err != nil {
		return err
	}
	return nil
}

// AssertDatabaseClusterSpecBackupStoragesValueAffinityConstraints checks if the values respects the defined constraints
func AssertDatabaseClusterSpecBackupStoragesValueAffinityConstraints(obj DatabaseClusterSpecBackupStoragesValueAffinity) error {
	return nil
}
