/*
 * Percona Everest schema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



// DatabaseClusterSpecMonitoring - Monitoring contains a monitoring settings.
type DatabaseClusterSpecMonitoring struct {

	ContainerSecurityContext DatabaseClusterSpecBackupContainerSecurityContext `json:"containerSecurityContext,omitempty"`

	// PullPolicy describes a policy for if/when to pull a container image
	ImagePullPolicy string `json:"imagePullPolicy,omitempty"`

	Pmm DatabaseClusterSpecMonitoringPmm `json:"pmm,omitempty"`

	Resources DatabaseClusterSpecBackupResources `json:"resources,omitempty"`

	RuntimeClassName string `json:"runtimeClassName,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *DatabaseClusterSpecMonitoring) UnmarshalJSON(data []byte) error {

	type Alias DatabaseClusterSpecMonitoring // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertDatabaseClusterSpecMonitoringRequired checks if the required fields are not zero-ed
func AssertDatabaseClusterSpecMonitoringRequired(obj DatabaseClusterSpecMonitoring) error {
	if err := AssertDatabaseClusterSpecBackupContainerSecurityContextRequired(obj.ContainerSecurityContext); err != nil {
		return err
	}
	if err := AssertDatabaseClusterSpecMonitoringPmmRequired(obj.Pmm); err != nil {
		return err
	}
	if err := AssertDatabaseClusterSpecBackupResourcesRequired(obj.Resources); err != nil {
		return err
	}
	return nil
}

// AssertDatabaseClusterSpecMonitoringConstraints checks if the values respects the defined constraints
func AssertDatabaseClusterSpecMonitoringConstraints(obj DatabaseClusterSpecMonitoring) error {
	return nil
}
