/*
 * Percona Everest schema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



// DatabaseClusterSpecBackupStoragesValueVolumeSpecHostPath - HostPath to use as data volume for mysql. HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.
type DatabaseClusterSpecBackupStoragesValueVolumeSpecHostPath struct {

	// path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path string `json:"path"`

	// type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type string `json:"type,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *DatabaseClusterSpecBackupStoragesValueVolumeSpecHostPath) UnmarshalJSON(data []byte) error {

	type Alias DatabaseClusterSpecBackupStoragesValueVolumeSpecHostPath // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecHostPathRequired checks if the required fields are not zero-ed
func AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecHostPathRequired(obj DatabaseClusterSpecBackupStoragesValueVolumeSpecHostPath) error {
	elements := map[string]interface{}{
		"path": obj.Path,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecHostPathConstraints checks if the values respects the defined constraints
func AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecHostPathConstraints(obj DatabaseClusterSpecBackupStoragesValueVolumeSpecHostPath) error {
	return nil
}
