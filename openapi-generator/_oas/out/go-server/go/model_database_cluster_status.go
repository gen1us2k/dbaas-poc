/*
 * Percona Everest schema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



// DatabaseClusterStatus - DatabaseClusterStatus defines the observed state of Database.
type DatabaseClusterStatus struct {

	Host string `json:"host,omitempty"`

	Message string `json:"message,omitempty"`

	Ready int32 `json:"ready,omitempty"`

	Size int32 `json:"size,omitempty"`

	// AppState is used to represent cluster's state.
	Status string `json:"status,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *DatabaseClusterStatus) UnmarshalJSON(data []byte) error {

	type Alias DatabaseClusterStatus // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertDatabaseClusterStatusRequired checks if the required fields are not zero-ed
func AssertDatabaseClusterStatusRequired(obj DatabaseClusterStatus) error {
	return nil
}

// AssertDatabaseClusterStatusConstraints checks if the values respects the defined constraints
func AssertDatabaseClusterStatusConstraints(obj DatabaseClusterStatus) error {
	return nil
}
