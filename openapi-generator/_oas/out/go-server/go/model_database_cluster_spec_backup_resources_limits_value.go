/*
 * Percona Everest schema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



type DatabaseClusterSpecBackupResourcesLimitsValue struct {
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *DatabaseClusterSpecBackupResourcesLimitsValue) UnmarshalJSON(data []byte) error {

	type Alias DatabaseClusterSpecBackupResourcesLimitsValue // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertDatabaseClusterSpecBackupResourcesLimitsValueRequired checks if the required fields are not zero-ed
func AssertDatabaseClusterSpecBackupResourcesLimitsValueRequired(obj DatabaseClusterSpecBackupResourcesLimitsValue) error {
	return nil
}

// AssertDatabaseClusterSpecBackupResourcesLimitsValueConstraints checks if the values respects the defined constraints
func AssertDatabaseClusterSpecBackupResourcesLimitsValueConstraints(obj DatabaseClusterSpecBackupResourcesLimitsValue) error {
	return nil
}
