/*
 * Percona Everest schema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// K8sAPIService is a service that implements the logic for the K8sAPIServicer
// This service should implement the business logic for every endpoint for the K8sAPI API.
// Include any external packages or services that will be required by this service.
type K8sAPIService struct {
}

// NewK8sAPIService creates a default api service
func NewK8sAPIService() K8sAPIServicer {
	return &K8sAPIService{}
}

// CreateDatabaseCluster - Create a database cluster on given kubernetes cluster
func (s *K8sAPIService) CreateDatabaseCluster(ctx context.Context, kubernetesName string, databaseCluster DatabaseCluster) (ImplResponse, error) {
	// TODO - update CreateDatabaseCluster with the required logic for this service method.
	// Add api_k8s_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, DatabaseCluster{}) or use other options such as http.Ok ...
	// return Response(200, DatabaseCluster{}), nil

	// TODO: Uncomment the next line to return response Response(400, BadRequest{}) or use other options such as http.Ok ...
	// return Response(400, BadRequest{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateDatabaseCluster method not implemented")
}

// ListDatabases - List of created database clusters on provided kubernetes cluster
func (s *K8sAPIService) ListDatabases(ctx context.Context, kubernetesName string) (ImplResponse, error) {
	// TODO - update ListDatabases with the required logic for this service method.
	// Add api_k8s_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []DatabaseCluster{}) or use other options such as http.Ok ...
	// return Response(200, []DatabaseCluster{}), nil

	// TODO: Uncomment the next line to return response Response(400, BadRequest{}) or use other options such as http.Ok ...
	// return Response(400, BadRequest{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListDatabases method not implemented")
}

// ListKubernetesClusters - List of registered kubernetes clusters
func (s *K8sAPIService) ListKubernetesClusters(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListKubernetesClusters with the required logic for this service method.
	// Add api_k8s_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, KubernetesCluster{}) or use other options such as http.Ok ...
	// return Response(200, KubernetesCluster{}), nil

	// TODO: Uncomment the next line to return response Response(400, BadRequest{}) or use other options such as http.Ok ...
	// return Response(400, BadRequest{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListKubernetesClusters method not implemented")
}

// RegisterKubernetes - Register Kubernetes cluster in the control plane
func (s *K8sAPIService) RegisterKubernetes(ctx context.Context, kubernetesCluster KubernetesCluster) (ImplResponse, error) {
	// TODO - update RegisterKubernetes with the required logic for this service method.
	// Add api_k8s_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, KubernetesCluster{}) or use other options such as http.Ok ...
	// return Response(200, KubernetesCluster{}), nil

	// TODO: Uncomment the next line to return response Response(400, BadRequest{}) or use other options such as http.Ok ...
	// return Response(400, BadRequest{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RegisterKubernetes method not implemented")
}
