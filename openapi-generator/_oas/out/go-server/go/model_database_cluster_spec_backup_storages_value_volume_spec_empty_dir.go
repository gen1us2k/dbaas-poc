/*
 * Percona Everest schema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



// DatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDir - EmptyDir to use as data volume for mysql. EmptyDir represents a temporary directory that shares a pod's lifetime.
type DatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDir struct {

	// medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium string `json:"medium,omitempty"`

	SizeLimit DatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDirSizeLimit `json:"sizeLimit,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *DatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDir) UnmarshalJSON(data []byte) error {

	type Alias DatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDir // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDirRequired checks if the required fields are not zero-ed
func AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDirRequired(obj DatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDir) error {
	if err := AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDirSizeLimitRequired(obj.SizeLimit); err != nil {
		return err
	}
	return nil
}

// AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDirConstraints checks if the values respects the defined constraints
func AssertDatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDirConstraints(obj DatabaseClusterSpecBackupStoragesValueVolumeSpecEmptyDir) error {
	return nil
}
